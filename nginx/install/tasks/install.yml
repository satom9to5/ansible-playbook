- name: install nginx depends library
  tags:
    - nginx
    - nginx/install
  become: true
  ignore_errors: yes
  yum: >
    name={{ item }}
    state=latest
  with_items:
    - libxslt-devel
    - gettext

- name: create nginx-build work directory
  tags:
    - nginx
    - nginx/install
  become: true
  file: >
    path={{ nginx__build_work_directory }}
    state=directory

- name: copty nginx third party module config
  tags:
    - nginx
    - nginx/install
  become: true
  template: >
    src=third_party_modules.j2
    dest={{ nginx__module_file_path }}

- name: configure nginx
  tags:
    - nginx
    - nginx/install
  become: true
  ignore_errors: yes
  shell: |
    source /etc/profile.d/proglang.sh
    export LUAJIT_LIB=/usr/local/lib
    export LUAJIT_INC=/usr/local/include/luajit-2.0
    nginx-build \
      -v {{ nginx__version }} \
      -d {{ nginx__build_work_directory }} \
      -m {{ nginx__module_file_path }} \
      -clear \
      -pcre \
      -zlib \
      -openssl \
      -sbin-path=/usr/sbin/nginx \
      -conf-path={{ nginx__conf_dir }}/nginx.conf \
      -error-log-path={{ nginx__log_dir }}/error.log \
      -http-log-path={{ nginx__log_dir }}/access.log \
      -http-client-body-temp-path={{ nginx__tmp_dir }}/client_body \
      -http-proxy-temp-path={{ nginx__tmp_dir }}/proxy \
      -http-fastcgi-temp-path={{ nginx__tmp_dir }}/fastcgi \
      -pid-path={{ nginx__pidfile_dir }}/nginx.pid \
      -lock-path={{ nginx__lock_dir }}/nginx.lock \
      -user={{ nginx__user }} \
      -group={{ nginx__group }} \
      -with-debug \
      -with-file-aio \
      -with-pcre-jit \
      -with-http_gzip_static_module \
      -with-http_ssl_module \
      -with-http_stub_status_module \
      -with-http_realip_module \
      -with-http_addition_module \
      -with-http_flv_module \
      -with-http_mp4_module \
      -with-http_secure_link_module \
      -with-http_degradation_module \
      -with-http_xslt_module \
      -with-http_v2_module \
      -with-ld-opt="-Wl,-rpath,/path/to/luajit-or-lua/lib" 

- name: install nginx
  tags:
    - nginx
    - nginx/install
  become: true
  shell: |
     cd {{ nginx__make_work_directory }}
     make install

- name: clear nginx work directory
  tags:
    - nginx
    - nginx/install
  become: true
  file: >
    path={{ nginx__build_work_directory }}
    state=absent

- name: check nginx pidfile directory
  tags:
    - nginx
    - nginx/install
  command: test -d {{ nginx__pidfile_dir }}
  register: register__nginx__pidfile_dir
  failed_when: register__nginx__pidfile_dir.rc not in [0,1]

- name: create nginx pidfile directory
  tags:
    - nginx
    - nginx/install
  become: true
  when: register__nginx__pidfile_dir.rc != 0
  file: >
    path={{ nginx__pidfile_dir }}
    state=directory
    owner={{ nginx__user }}

- name: check nginx lock directory
  tags:
    - nginx
    - nginx/install
  command: test -d {{ nginx__lock_dir }}
  register: register__nginx__lock_dir
  failed_when: register__nginx__lock_dir.rc not in [0,1]

- name: create nginx lock directory
  tags:
    - nginx
    - nginx/install
  become: true
  when: register__nginx__lock_dir.rc != 0
  file: >
    path={{ nginx__lock_dir }}
    state=directory
    owner={{ nginx__user }}

- name: create nginx log directory
  tags:
    - nginx
    - nginx/install
  become: true
  file: >
    path={{ nginx__log_dir }}
    state=directory
    owner={{ nginx__user }}

- name: create nginx tmp directory
  tags:
    - nginx
    - nginx/install
  become: true
  file: >
    path={{ nginx__tmp_dir }}
    state=directory
    owner={{ nginx__user }}

- name: create nginx cache directory
  tags:
    - nginx
    - nginx/install
  become: true
  file: >
    path={{ nginx__cache_dir }}
    state=directory
    owner={{ nginx__user }}

- name: create nginx conf directories
  tags:
    - nginx
    - nginx/install
  become: true
  file: >
    path={{ item }}
    state=directory
  with_items:
    - "{{ nginx__conf_dir }}/conf.d"
    - "{{ nginx__conf_dir }}/conf.d/server"
    - "{{ nginx__conf_dir }}/conf.d/upstream"
    - "{{ nginx__conf_dir }}/conf.d/location"
    - "{{ nginx__conf_dir }}/conf.d/location_proxy"
    - "{{ nginx__conf_dir }}/conf.d/lua"

- name: create nginx data directories
  tags:
    - nginx
    - nginx/install
  become: true
  file: >
    path={{ item }}
    state=directory
    owner={{ nginx__user }}
    group={{ nginx__user }}
  with_items:
    - "{{ nginx__tmp_dir }}"
    - "{{ nginx__cache_dir }}"

- name: nginx conf files copy
  tags:
    - nginx
    - nginx/install
  become: true
  template: >
    src=nginx.conf.j2
    dest={{ nginx__conf_dir }}/nginx.conf
    mode=0755

- name: nginx sysconfig copy
  tags:
    - nginx
    - nginx/install
  become: true
  template: >
    src=sysconfig.j2
    dest=/etc/sysconfig/nginx

- name: nginx init.d script copy
  tags:
    - nginx
    - nginx/install
  become: true
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'
  template: >
    src=init.d.j2
    dest=/etc/rc.d/init.d/nginx
    mode=0755

- name: nginx systemd service copy
  tags:
    - nginx
    - nginx/install
  become: true
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'
  template: >
    src=nginx.service.j2
    dest=/usr/lib/systemd/system/nginx.service
    mode=0644

- name: nginx service enable by RHEL6
  tags:
    - nginx
    - nginx/install
  become: true
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6' and service_enable == 1
  service: >
    name=nginx
    enabled=yes

- name: nginx service enable by RHEL7
  tags:
    - nginx
    - nginx/install
  become: true
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7' and service_enable == 1
  service: >
    name=nginx.service
    enabled=yes
