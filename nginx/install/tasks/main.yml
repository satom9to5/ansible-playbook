- name: nginx depends library install
  tags:
    - nginx
  ignore_errors: yes
  yum: name={{ item }} state=latest
  with_items:
    - libxslt-devel

- name: create nginx-build work directory
  tags:
    - nginx
  shell: |
    mkdir -p {{ nginx_build_work_directory }}

- name: nginx third party module config copy
  tags:
    - nginx
  template: >
    src=third_party_modules.j2
    dest={{ nginx_module_file_path }}

- name: nginx configure
  tags:
    - nginx
  ignore_errors: yes
  shell: |
    source /etc/profile.d/proglang.sh
    export LUAJIT_LIB=/usr/local/lib
    export LUAJIT_INC=/usr/local/include/luajit-2.0
    nginx-build \
      -v {{ nginx_version }} \
      -d {{ nginx_build_work_directory }} \
      -m {{ nginx_module_file_path }} \
      -clear \
      -pcre \
      -zlib \
      -openssl \
      -sbin-path=/usr/sbin/nginx \
      -conf-path=/etc/nginx/nginx.conf \
      -error-log-path={{ nginx_log_dir }}/error.log \
      -http-log-path={{ nginx_log_dir }}/access.log \
      -http-client-body-temp-path=/var/lib/nginx/tmp/client_body \
      -http-proxy-temp-path=/var/lib/nginx/tmp/proxy \
      -http-fastcgi-temp-path=/var/lib/nginx/tmp/fastcgi \
      -pid-path=/var/run/nginx.pid \
      -lock-path=/var/lock/subsys/nginx.lock \
      -user=nginx \
      -group=nginx \
      -with-debug \
      -with-file-aio \
      -with-pcre-jit \
      -with-http_gzip_static_module \
      -with-http_ssl_module \
      -with-http_stub_status_module \
      -with-http_realip_module \
      -with-http_addition_module \
      -with-http_flv_module \
      -with-http_mp4_module \
      -with-http_secure_link_module \
      -with-http_degradation_module \
      -with-http_xslt_module \
      -with-http_v2_module \
      -with-ld-opt="-Wl,-rpath,/path/to/luajit-or-lua/lib" 

- name: nginx install
  tags:
    - nginx
  shell: |
     cd {{ nginx_make_work_directory }}
     make install

- name: create nginx conf directory 
  tags:
    - nginx
  file: >
    path=/etc/nginx/conf.d
    state=directory

- name: create nginx upstream conf directory 
  tags:
    - nginx
  file: >
    path=/etc/nginx/conf.d/upstream
    state=directory

- name: create nginx location conf directory 
  tags:
    - nginx
  file: >
    path=/etc/nginx/conf.d/location
    state=directory

- name: create nginx lua script directory 
  tags:
    - nginx
  file: >
    path=/etc/nginx/conf.d/lua
    state=directory

- name: create nginx temp directory
  tags:
    - nginx
  file: >
    path=/var/lib/nginx/tmp
    state=directory
    owner={{ nginx_user }}
    group={{ nginx_user }}

- name: create nginx cache directory
  tags:
    - nginx
  file: >
    path=/var/cache/nginx
    state=directory
    owner={{ nginx_user }}
    group={{ nginx_user }}

- name: nginx conf file copy
  tags:
    - nginx
  template: >
    src=nginx.conf.j2
    dest=/etc/nginx/nginx.conf
    mode=0755

- name: nginx env conf file copy
  tags:
    - nginx
  template: >
    src=env.conf.j2
    dest=/etc/nginx/env.conf
    mode=0755

- name: nginx log conf file copy
  tags:
    - nginx
  template: >
    src=log.conf.j2
    dest=/etc/nginx/log.conf
    mode=0755

- name: nginx charset conf file copy
  tags:
    - nginx
  template: >
    src=charset.conf.j2
    dest=/etc/nginx/charset.conf
    mode=0755

- name: nginx gzip conf file copy
  tags:
    - nginx
  template: >
    src=gzip.conf.j2
    dest=/etc/nginx/gzip.conf
    mode=0755

- name: nginx proxy conf file copy
  tags:
    - nginx
  template: >
    src=proxy.conf.j2
    dest=/etc/nginx/proxy.conf
    mode=0755

- name: nginx fastcgi_cache conf file copy
  tags:
    - nginx
  template: >
    src=fastcgi_cache.conf.j2
    dest=/etc/nginx/fastcgi_cache.conf
    mode=0755

- name: nginx server conf file copy
  tags:
    - nginx
  template: >
    src=server.conf.j2
    dest=/etc/nginx/server.conf
    mode=0755

- name: nginx sysconfig copy
  tags:
    - nginx
  template: >
    src=sysconfig.j2
    dest=/etc/sysconfig/nginx

- name: nginx init.d script copy
  tags:
    - nginx
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'
  template: >
    src=init.d.j2
    dest=/etc/rc.d/init.d/nginx
    mode=0755

- name: nginx systemd service copy
  tags:
    - nginx
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'
  template: >
    src=nginx.service.j2
    dest=/usr/lib/systemd/system/nginx.service
    mode=0644

- name: nginx service enable by RHEL6
  tags:
    - nginx
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6' and service_enable == 1
  service: >
    name=nginx
    enabled=yes

- name: nginx service enable by RHEL7
  tags:
    - nginx
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7' and service_enable == 1
  service: >
    name=nginx.service
    enabled=yes
